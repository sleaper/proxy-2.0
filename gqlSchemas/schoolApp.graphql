type Query {
  user(key: String!): UserQuery!
  UserAuth(key: String!): Boolean!
}

"""Object representing user"""
type UserQuery {
  name: String!
  key: String!
  firebaseToken: String!
  id: String!
  info: UserInfo!
  subjectMarks(subject: String!): [Marks!]!
  report: [Report!]!
  marks(dateTo: String!, dateFrom: String!): [Marks!]!
  daySchedule: [ScheduleEvent!]!
  calendarDay(date: String!): [CalendarDay!]!
  homeworks: [String!]!
  avarageMarks: [AvarageMark!]!
}

type UserInfo {
  name: String!
  className: String!
  personId: String!
  id: String!
}

type Marks {
  name: String!
  mark: String
  date: String!
  id: String!
  value: Value!
  subject: Subject!
}

type Value {
  DRUH_HODNOCENI_ID: String!
  NAZEV: String!
  POPIS: String!
  VAHA: String!
  PORADI_ZOBRAZENI: String!
}

type Subject {
  SKOLNI_ROK_ID: String!
  PREDMET_ID: String!
  ZKRATKA: String!
  NAZEV: String!
  PRIZNAK_DRUH_PREDMETU: String!
  PORADI_ZOBRAZENI: String!
}

type Report {
  id: String!
  subject: String!
  marks: String!
}

type ScheduleEvent {
  name: String!
  timeFrom: String!
  timeTo: String!
  room: String!
  teacher: String!
  subjectNum: String!
  id: String!
  order: String!
  color: String!
  backUp: Boolean!
}

type CalendarDay {
  name: String!
  timeFrom: String!
  timeTo: String!
  class: String
  teacher: String
  id: ID!
  order: String!
  notes: Notes
  events: Events
  backUp: Boolean
  type: String
}

type Notes {
  note: String
  order: String
}

type Events {
  event: String
  order: String
  color: String
}

type AvarageMark {
  subject: String!
  teacher: String!
  marks: String!
  id: String!
}

type Mutation {
  user(key: String!): UserMutation!
  addUser(firebaseToken: String!, key: String!, name: String!): Boolean!
  removeUser(firebaseToken: String!): Boolean!
}

type UserMutation {
  name: String!
  key: String!
  firebaseToken: String!
  id: String!
  saveHomeworks(firebaseToken: String!, payload: String!): String!
}
